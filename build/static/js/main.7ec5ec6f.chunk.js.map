{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["PersonForm","_ref","addPerson","newName","handleNameChange","newNumber","handleNumberChange","react_default","a","createElement","onSubmit","value","onChange","type","Persons","persons","newFilter","removePerson","filter","person","name","toLocaleLowerCase","includes","map","key","number","id","onClick","Filter","handleFilterChange","baseUrl","services_persons","axios","get","then","response","data","newPerson","post","delete","concat","put","components_Notification","message","className","_ref2","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","setMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","length","components_Filter","event","target","components_PersonForm","preventDefault","nameObject","forEach","p","some","window","confirm","setTimeout","catch","error","newList","returnPerson","components_Persons","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ec5ec6f.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\nreturn(\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          nimi: <input\n            value={newName}\n            onChange={handleNameChange} />\n        </div>\n        <div>numero: <input\n          value={newNumber}\n          onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n      </div>\n)\n}\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, newFilter, removePerson }) => {\n    return (\n        <div>\n            {persons\n                .filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLocaleLowerCase()))\n                .map(person =>\n                    <div key={person.name}>\n                        {person.name} {person.number}\n                        <button id={person.id} name={person.name} onClick={removePerson}>\n                            poista\n                        </button>\n                    </div>)}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n    return (\n        <div>\n            rajaa näytettäviä ihmisiä\n            <input value={newFilter}\n                onChange={handleFilterChange} />\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request =  axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notice\">\n            {message}\n        </div>\n    )\n}\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    \n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default { Notification, Error }","import PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    let id = 0;\n    persons.forEach(p => p.name === nameObject.name ? id = p.id : 0)\n    if (!persons.some(person => person.name === newName)) {\n      personService\n        .create(nameObject)\n        .then(returnPerson => {\n          setPersons(persons.concat(returnPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(\n            `Lisättiin ${nameObject.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        }).catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(error.response.data.error)\n          setNewName('')\n          setNewNumber('')\n          \n        })\n    } else {\n      if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        personService\n          .update(id, nameObject)\n          .then(response => {\n            setPersons(persons.map(p => p.id !== id ? p : response))\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `Päivitettiin ${nameObject.name}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            const newList = persons.filter(p => p.id !== id)\n            setPersons(newList)\n            setNewName('')\n            setNewNumber('')\n            setErrorMessage(\n              `Henkilö ${nameObject.name} on jo poistettu`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n\n      }\n    }\n  }\n\n  const removePerson = (event) => {\n    const id = event.target.id\n    const name = event.target.name\n    if (window.confirm(`Poistetaanko ${name}?`)) {\n      personService\n        .remove(id)\n        .then(response => {\n          const newList = persons.filter(p => p.id !== id)\n          setPersons(newList)\n          setMessage(\n            `${name} on poistettu`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n\n      <Notification.Notification message={message} />\n      <Notification.Error message={errorMessage} />\n\n      <Filter newFilter={newFilter}\n        handleFilterChange={handleFilterChange} />\n\n      <h2>Lisää uusi</h2>\n\n      <PersonForm addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange} />\n\n      <h2>Numerot</h2>\n\n      <Persons persons={persons}\n        newFilter={newFilter}\n        removePerson={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}